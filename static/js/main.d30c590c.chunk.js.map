{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","className","href","email","name","TodoInfo","todo","completed","id","title","TodoList","todos","map","username","getUserById","userId","usersFromServer","find","todosList","App","useState","setTitle","setUserId","hasTitleError","sethasTitleError","hasUserIdError","sethasUserIdError","setTodos","action","method","onSubmit","event","preventDefault","newTodo","Math","max","currentTodos","htmlFor","type","onChange","target","value","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d30c590c.chunk.js","sourcesContent":["import { User } from '../../types/User';\n\ntype Props = {\n  user: User | null;\n};\nexport const UserInfo:React.FC<Props> = ({ user }) => (\n  <a\n    className=\"UserInfo\"\n    href={`mailto:${user?.email}`}\n  >\n    {user?.name}\n  </a>\n);\n","import { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo:React.FC<Props> = ({ todo }) => {\n  return (\n    <article\n      className={`TodoInfo ${todo.completed ? 'TodoInfo--completed' : ''}`}\n      data-id={todo.id}\n    >\n      <h2 className=\"TodoInfo__title\">{todo.title}</h2>\n      <UserInfo user={todo.user} />\n    </article>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo\n          key={todo.id}\n          todo={todo}\n        />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { useState } from 'react';\nimport { TodoList } from './components/TodoList';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { Todo } from './types/Todo';\n\nfunction getUserById(userId:number) {\n  return usersFromServer.find(user => user.id === userId);\n}\n\nexport const todosList: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId) || null,\n}));\n\nexport const App: React.FC = () => {\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [hasTitleError, sethasTitleError] = useState(false);\n  const [hasUserIdError, sethasUserIdError] = useState(false);\n  const [todos, setTodos] = useState<Todo[]>(todosList);\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    sethasTitleError(false);\n  };\n\n  const handleUserIdChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    sethasUserIdError(false);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    sethasTitleError(!title);\n    sethasUserIdError(!userId);\n\n    if (!title || !userId) {\n      return;\n    }\n\n    if (title && userId) {\n      const newTodo:Todo = {\n        id: Math.max(...todos.map(todo => todo.id)) + 1,\n        title,\n        completed: false,\n        userId,\n        user: getUserById(userId) || null,\n      };\n\n      setTodos(currentTodos => [...currentTodos, newTodo]);\n\n      setTitle('');\n      sethasTitleError(false);\n      setUserId(0);\n      sethasUserIdError(false);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"post-title\" className=\"label\">Title: </label>\n\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            onChange={handleTitleChange}\n            value={title}\n            id=\"post-title\"\n          />\n\n          {hasTitleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"post-user\">User: </label>\n\n          <select\n            data-cy=\"userSelect\"\n            value={userId}\n            onChange={handleUserIdChange}\n            id=\"post-user\"\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map((user) => (\n              <option key={user.id} value={user.id}>\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {hasUserIdError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <section className=\"TodoList\">\n        <TodoList todos={todos} />\n      </section>\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}